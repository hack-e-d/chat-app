{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","src","process","alt","href","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","useEffect","current","scrollIntoView","behavior","sendMessage","e","a","preventDefault","displayName","uid","photoURL","add","user","body","createdAt","FieldValue","serverTimestamp","style","padding","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","sender_reciver","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9fc354b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDv4eIm0SfXyMAjLk4yrUqfpUWm-MFQwVI\",\r\n  authDomain: \"chat-app-68e88.firebaseapp.com\",\r\n  projectId: \"chat-app-68e88\",\r\n  storageBucket: \"chat-app-68e88.appspot.com\",\r\n  messagingSenderId: \"1005851949167\",\r\n  appId: \"1:1005851949167:web:48098fd9ae73793ff1359a\",\r\n  measurementId: \"G-VPPR6P8DEZ\"\r\n})\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App border-bg h-screen\">\r\n      <SignOut />\r\n      <section className=\"flex justify-center items-center h-screen\">\r\n        {user ? <ChatRoom /> : <SignIn />}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction SignIn() {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col h-screen items-center justify-center\">\r\n      <button className=\"mt-auto bg-white outline-none focus:outline-none p-2 m-3 border-b-4 border-gray-500 hover:bg-gray-200 hover:border-gray-500 transition-all duration-75 ease-in-out rounded inline-flex items-center\" onClick={signInWithGoogle}>\r\n        <img className=\"w-5 mr-2 block\" src={process.env.PUBLIC_URL + '/google-icon.svg'} alt='Google Icon' />\r\n        <span className=\"block\">Sign In With Google</span>\r\n      </button>\r\n      <p className=\"text-white text-opacity-50 text-center hover:text-opacity-100 text-sm\">'cause I was too lazy to set up a better auth system </p>\r\n      <p className=\"justify-self-end mt-auto text-white text-center text-opacity-50 hover:text-opacity-100\">Made by <a className=\"hover:text-yellow-500\" href=\"https://github.com/hack-e-d\">VijayPV</a> w/ inspiration from <a className=\"hover:text-red-500\" href=\"https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA\">ðŸ”¥Fireship</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <div className=\"w-full\">\r\n      <button className=\"absolute hover:shadow-xl hover:text-pink-900 transition-all duration-75 ease-in-out rounded-full p-2 bg-white signout-btn material-icons\" onClick={() => auth.signOut()}>exit_to_app</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt', 'asc').limitToLast(25);\r\n\r\n  const [messages] = useCollectionData(query, {idField: 'id'});\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const scrollToBottom = () => {\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { displayName, uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      user: displayName,\r\n      body: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid: uid,\r\n      photoURL: photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-bg w-full sm:w-2/3 p-2 rounded\" style={{padding: '2rem' }}>\r\n      <div className=\"overflow-y-auto h-screen-90\">\r\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n        <span ref={dummy}></span>\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage} className=\"pt-3 w-full inline-flex\">\r\n        <input className=\"rounded-3xl px-3 w-full py-1 outline-none focus:shadow\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Say something\" />\r\n        <button className={`material-icons p-2 mx-2 bg-white rounded-full transition-all duration-75 ease-in-out text-xl ${!formValue || 'text-pink-700 hover:text-pink-900'}`} type=\"submit\" disabled={!formValue}>send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { user, body, uid, photoURL, createdAt } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'flex-row-reverse' : 'flex-row';\r\n  const messageBodyClass = uid === auth.currentUser.uid ? 'sent-message-bg text-right' : 'received-message-bg';\r\n  const sender_reciver = uid === auth.currentUser.uid ? 'right' : 'left';\r\n\r\n    return (\r\n      <div className={`chat-container ${sender_reciver}`}>\r\n        <div>\r\n          <img  src={photoURL || 'https://i.imgur.com/rFbS5ms.png'} alt=\"{user}'s pfp\" />\r\n        </div>\r\n        <div className='msg-container'>\r\n          <p className=\"text-xs\">{user}</p>\r\n          <p>{body}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}